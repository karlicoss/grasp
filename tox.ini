[tox]
minversion = 3.21
# relies on the correct version of Python installed
envlist = ruff,tests,mypy
# https://github.com/tox-dev/tox/issues/20#issuecomment-247788333
# hack to prevent .tox from crapping to the project directory
toxworkdir = {env:TOXWORKDIR_BASE:}{toxinidir}/.tox

[testenv]
# TODO how to get package name from setuptools?
package_name = "grasp_backend"
passenv =
# useful for tests to know they are running under ci
    CI
    CI_*
# respect user's cache dirs to prevent tox from crapping into project dir
    PYTHONPYCACHEPREFIX
    MYPY_CACHE_DIR
    RUFF_CACHE_DIR


# note: --use-pep517 below is necessary for tox --parallel flag to work properly
# otherwise it seems that it tries to modify .eggs dir in parallel and it fails


[testenv:ruff]
commands =
    {envpython} -m pip install --use-pep517 -e .[testing]
    {envpython} -m ruff check src/ tests/


[testenv:tests]
commands =
    {envpython} -m pip install --use-pep517 -e .[testing]
    # posargs allow test filtering, e.g. tox ... -- -k test_name
    {envpython} -m pytest \
        src \
        {posargs}
        # TODO hmm --pyargs {[testenv]package_name} isn't working due to extra conftest in tests/ directory??

[testenv:mypy]
commands =
    {envpython} -m pip install --use-pep517 -e .[testing]
    {envpython} -m mypy --install-types --non-interactive \
        -p {[testenv]package_name}       \
        # txt report is a bit more convenient to view on CI
        --txt-report  .coverage.mypy     \
        --html-report .coverage.mypy     \
        {posargs}
    {envpython} -m mypy --install-types --non-interactive \
        -p tests  \
        {posargs}
